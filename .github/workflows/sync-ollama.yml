# .github/workflows/sync-images.yml
name: Sync Docker Images to GHCR and AliyunCR
on:
  # ÊØèÊó•ÊéíÁ®ãËß∏ÁôºÔºöË®≠ÂÆöÊñº UTC ÊôÇÈñì ÂáåÊô® 2 ÈªûÂü∑Ë°å
  # ÈÄôÂ∞çÊáâÂà∞Âè∞ÁÅ£/È¶ôÊ∏Ø/Âåó‰∫¨ÊôÇÈñì (CST, UTC+8) ÁöÑ‰∏äÂçà 10 Èªû
  schedule:
    - cron: '0 2 * * *'  # ‰øÆÊ≠£ cron Ë°®ËææÂºè
  
  # ÊâãÂãïËß∏ÁôºÔºöÂÖÅË®±ÊÇ®Èö®ÊôÇÂæû GitHub Á∂≤Á´ôÁöÑ Actions È†ÅÈù¢ÊâãÂãïÂü∑Ë°å
  workflow_dispatch:

jobs:
  sync-ollama:
    name: Sync Latest Stable Ollama Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      # ‰æÜÊ∫ê Docker Hub ÂÄâÂ∫´
      SOURCE_REPO: ollama/ollama
      # ÁõÆÊ®ô GHCR ÂÄâÂ∫´ (Ë´ãÂãôÂøÖ‰øÆÊîπ YOUR_USERNAME ÁÇ∫ÊÇ®Ëá™Â∑±ÁöÑ GitHub ‰ΩøÁî®ËÄÖÂêçÁ®±Ôºå‰∏îÂøÖÈ†àÁÇ∫Â∞èÂØ´)
      TARGET_REPO: ghcr.io/omygpt/ollama
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up crane
        uses: imjasonh/setup-crane@v0.1
      - name: Login to Docker Hub
        run: crane auth login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
        
      - name: Login to GitHub Container Registry
        run: crane auth login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
        
      - name: Filter and Sync Latest Stable Tags for Ollama
        run: |
          echo "Fetching all tags from ${{ env.SOURCE_REPO }}..."
          
          # 1. ‰ΩøÁî®Ê≠£Ë¶èË°®Á§∫Âºè grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' Á≤æÊ∫ñÈÅéÊøæÂá∫Á¥îÊï∏Â≠óÁâàÊú¨Ëôü (X.Y.Z)
          #    ÈÄôÊúÉËá™ÂãïÊéíÈô§ÊâÄÊúâÂåÖÂê´ 'rc', 'rocm', 'cuda' Á≠âÂæåÁ∂¥ÁöÑÊ®ôÁ±§
          # 2. ‰ΩøÁî® sort -V ÈÄ≤Ë°åÁâàÊú¨ËôüÊéíÂ∫è
          # 3. ‰ΩøÁî® tail -n 10 ÈÅ∏ÂèñÊúÄÊñ∞ÁöÑ 10 ÂÄãÁ©©ÂÆöÁâà
          stable_tags=$(crane ls ${{ env.SOURCE_REPO }} | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 10)
          
          # 4. ÁÇ∫‰∫ÜÁ¢∫‰øù 'latest' Ê®ôÁ±§Á∏ΩÊòØË¢´ÂêåÊ≠•ÔºåÂ∞áÂÆÉÂä†ÂÖ•Ê∏ÖÂñÆ‰∏¶ÂéªÈáç
          final_tags=$(echo -e "${stable_tags}\nlatest" | sort -u)
          echo "The following stable tags for ollama will be synced:"
          echo "${final_tags}"
          
          echo "Starting sync to ${{ env.TARGET_REPO }}..."
          for tag in $final_tags; do
            echo "--> Syncing ollama tag: $tag"
            crane copy "${{ env.SOURCE_REPO }}:$tag" "${{ env.TARGET_REPO }}:$tag"
          done
          
          echo "Ollama sync completed!"

  sync-vllm:
    name: Sync Latest vllm-openai Image to Multi-Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    env:
      # ‰æÜÊ∫ê Docker Hub ÂÄâÂ∫´
      SOURCE_REPO: vllm/vllm-openai
      # ÁõÆÊ®ô GHCR ÂÄâÂ∫´
      GHCR_TARGET_REPO: ghcr.io/omygpt/vllm-openai
      # ÁõÆÊ®ôÈòøÈáåÈõ≤ÂÄâÂ∫´
      ALIYUN_TARGET_REPO: registry.cn-hangzhou.aliyuncs.com/dslab/vllm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up crane
        uses: imjasonh/setup-crane@v0.1
      - name: Login to Docker Hub
        run: crane auth login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
        
      - name: Login to GitHub Container Registry
        run: crane auth login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
      
      # ‰øÆÊ≠£ÈòøÈáåÈõ≤ÁôªÂÖ•Ê≠•È©ü
      - name: Login to Aliyun Container Registry
        run: |
          echo "Logging in to Aliyun Container Registry..."
          # Â¢ûÂä†Ë∞ÉËØï‰ø°ÊÅØÔºå‰ΩÜ‰∏çÊòæÁ§∫ÂÆåÊï¥Áî®Êà∑ÂêçÔºàÂÆâÂÖ®ËÄÉËôëÔºâ
          echo "Registry: registry.cn-hangzhou.aliyuncs.com"
          echo "Namespace: dslab"
          
          # Â∞ùËØïÁôªÂΩïÔºåÂ¢ûÂä†ÈîôËØØÂ§ÑÁêÜ
          if ! crane auth login -u "${{ secrets.ALIYUN_USERNAME }}" -p "${{ secrets.ALIYUN_PASSWORD }}" registry.cn-hangzhou.aliyuncs.com; then
            echo "Failed to login to Aliyun Container Registry"
            echo "Please check your ALIYUN_USERNAME and ALIYUN_PASSWORD secrets"
            echo "Username should be in format: namespace@ÈòøÈáå‰∫ëË¥¶Âè∑ID or full access credential username"
            exit 1
          fi
          
          echo "Successfully logged in to Aliyun Container Registry"
        
      - name: Sync Latest Tag for vllm-openai to multi-registry
        run: |
          TAG="latest"
          echo "Starting sync for ${{ env.SOURCE_REPO }}:$TAG to multiple registries..."
          
          # 1. ÂêåÊ≠•Âà∞ GHCR
          echo "--> Syncing to GHCR: ${{ env.GHCR_TARGET_REPO }}:$TAG"
          if crane copy "${{ env.SOURCE_REPO }}:$TAG" "${{ env.GHCR_TARGET_REPO }}:$TAG"; then
            echo "‚úÖ GHCR sync completed successfully"
          else
            echo "‚ùå GHCR sync failed"
            exit 1
          fi
          
          # 2. ÂêåÊ≠•Âà∞ÈòøÈáåÈõ≤ ACR
          echo "--> Syncing to Aliyun CR: ${{ env.ALIYUN_TARGET_REPO }}:$TAG"
          if crane copy "${{ env.SOURCE_REPO }}:$TAG" "${{ env.ALIYUN_TARGET_REPO }}:$TAG"; then
            echo "‚úÖ Aliyun CR sync completed successfully"
          else
            echo "‚ùå Aliyun CR sync failed"
            exit 1
          fi
          
          echo "üéâ vllm-openai multi-registry sync completed!"
